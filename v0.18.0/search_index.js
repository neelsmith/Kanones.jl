var documenterSearchIndex = {"docs":
[{"location":"vocab/irregularverbs/didomi/#δίδωμι","page":"δίδωμι","title":"δίδωμι","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Here's our value for repo:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"repo = pwd() |> dirname |> dirname |> dirname |> dirname\nrepo","category":"page"},{"location":"vocab/irregularverbs/didomi/#Present-system","page":"δίδωμι","title":"Present system","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/#Present-tense","page":"δίδωμι","title":"Present tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"present\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle and passive voices (identical forms):","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"present\"), gmpVoice(\"passive\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Imperative","page":"δίδωμι","title":"Imperative","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\ntbl = md_imperativeconjugation(gmpTense(\"present\"), gmpVoice(\"active\"), διδωμι, kds)\nMarkdown.parse(tbl)","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle and passive voices (identical forms):","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\ntbl = md_imperativeconjugation(gmpTense(\"present\"), gmpVoice(\"passive\"), διδωμι, kds)\nMarkdown.parse(tbl)","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\nvadj = GMFVerbalAdjective(\n    gmpGender(\"neuter\"), gmpCase(\"nominative\"), gmpNumber(1)\n)\nvadjforms = generate(διδωμι, formurn(vadj), kds)\n\ninf_act = GMFInfinitive(\n    gmpTense(\"present\"), gmpVoice(\"active\")\n)\ninf_actforms = generate(διδωμι, formurn(inf_act), kds)\n\ninf_pass = GMFInfinitive(\n    gmpTense(\"present\"), gmpVoice(\"passive\")\n)\ninf_passforms = generate(διδωμι, formurn(inf_pass), kds)\n\nactptcpl = participleslashline(διδωμι, gmpTense(\"present\"), gmpVoice(\"active\"), kds)\n\nmpptcpl = participleslashline(διδωμι, gmpTense(\"present\"), gmpVoice(\"middle\"), kds)\n\nmdlines = [\n    \"- **active infinitive**: $(inf_actforms[1])\",\n    \"- **middle & passive infinitive**: $(inf_passforms[1])\",\n    \"- **active participle**: $(actptcpl)\",\n    \"- **middle & passive participle**: $(mpptcpl)\",\n    \"- **verbal adjective**: $(vadjforms[1])\"]\nMarkdown.parse(join(mdlines,\"\\n\"))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Imperfect-tense","page":"δίδωμι","title":"Imperfect tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"imperfect\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle and passive voices (identical forms):","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"imperfect\"), gmpVoice(\"passive\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Future-tense","page":"δίδωμι","title":"Future tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"future\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"future\"), gmpVoice(\"middle\"),διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Passive voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"future\"), gmpVoice(\"passive\"),διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\n\ninf_act = GMFInfinitive(\n    gmpTense(\"future\"), gmpVoice(\"active\")\n)\ninf_actforms = generate(διδωμι, formurn(inf_act), kds)\n\n\ninf_mdl = GMFInfinitive(\n    gmpTense(\"future\"), gmpVoice(\"middle\")\n)\ninf_mdlforms = generate(διδωμι, formurn(inf_mdl), kds)\n\n\ninf_pass = GMFInfinitive(\n    gmpTense(\"future\"), gmpVoice(\"passive\")\n)\ninf_passforms = generate(διδωμι, formurn(inf_pass), kds)\n\n\nactptcpl = participleslashline(διδωμι, gmpTense(\"future\"), gmpVoice(\"active\"), kds)\n\nmidptcpl = participleslashline(διδωμι, gmpTense(\"future\"), gmpVoice(\"middle\"), kds)\n\npassptcpl = participleslashline(διδωμι, gmpTense(\"future\"), gmpVoice(\"passive\"), kds)\n\nmdlines = [\n    \"- **active infinitive**: $(inf_actforms[1])\",\n    \"- **middle infinitive**: $(inf_mdlforms[1])\",\n    \"- **passive infinitive**: $(inf_passforms[1])\",\n    \"- **active participle**: $(actptcpl)\",\n    \"- **middle participle**: $(midptcpl)\",\n    \"- **passive participle**: $(passptcpl)\"\n]\nMarkdown.parse(join(mdlines,\"\\n\"))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Aorist-tense","page":"δίδωμι","title":"Aorist tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"aorist\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"aorist\"), gmpVoice(\"middle\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Passive voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"aorist\"), gmpVoice(\"passive\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Imperative-2","page":"δίδωμι","title":"Imperative","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\ntbl = md_imperativeconjugation(gmpTense(\"aorist\"), gmpVoice(\"active\"), διδωμι, kds)\nMarkdown.parse(tbl)","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\ntbl = md_imperativeconjugation(gmpTense(\"aorist\"), gmpVoice(\"middle\"), διδωμι, kds)\nMarkdown.parse(tbl)","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Passive voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\ntbl = md_imperativeconjugation(gmpTense(\"aorist\"), gmpVoice(\"passive\"), διδωμι, kds)\nMarkdown.parse(tbl)","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\n\ninf_act = GMFInfinitive(\n    gmpTense(\"aorist\"), gmpVoice(\"active\")\n)\ninf_actforms = generate(διδωμι, formurn(inf_act), kds)\n\n\ninf_mdl = GMFInfinitive(\n    gmpTense(\"aorist\"), gmpVoice(\"middle\")\n)\ninf_mdlforms = generate(διδωμι, formurn(inf_mdl), kds)\n\n\ninf_pass = GMFInfinitive(\n    gmpTense(\"aorist\"), gmpVoice(\"passive\")\n)\ninf_passforms = generate(διδωμι, formurn(inf_pass), kds)\n\n\n\nactptcpl = participleslashline(διδωμι, gmpTense(\"aorist\"), gmpVoice(\"active\"), kds)\n\nmidptcpl = participleslashline(διδωμι, gmpTense(\"aorist\"), gmpVoice(\"middle\"), kds)\n\npassptcpl = participleslashline(διδωμι, gmpTense(\"aorist\"), gmpVoice(\"passive\"), kds)\n\n\nmdlines = [\n    \"- **active infinitive**: $(inf_actforms[1])\",\n    \"- **middle infinitive**: $(inf_mdlforms[1])\",\n    \"- **passive infinitive**: $(inf_passforms[1])\",\n    \"- **active participle**: $(actptcpl)\",\n    \"- **middle participle**: $(midptcpl)\",\n    \"- **passive participle**: $(passptcpl)\"\n]\n\nMarkdown.parse(join(mdlines,\"\\n\"))\n","category":"page"},{"location":"vocab/irregularverbs/didomi/#Perfect-system","page":"δίδωμι","title":"Perfect system","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/#Perfect-tense","page":"δίδωμι","title":"Perfect tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"perfect\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle and passive voices (identical forms):","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"perfect\"), gmpVoice(\"passive\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\nactptcpl = participleslashline(διδωμι, gmpTense(\"perfect\"), gmpVoice(\"active\"), kds)\n\nmpptcpl = participleslashline(διδωμι, gmpTense(\"perfect\"), gmpVoice(\"middle\"), kds)\n\n\ninf_act = GMFInfinitive(\n    gmpTense(\"perfect\"), gmpVoice(\"active\")\n)\ninf_actforms = generate(διδωμι, formurn(inf_act), kds)\n\nmdlines = [\n    \"- **active infinitive**: $(inf_actforms[1])\",\n    \"- **active participle**: $(actptcpl)\",\n    \"- **middle & passive participle**: $(mpptcpl)\"\n]\nMarkdown.parse(join(mdlines,\"\\n\"))","category":"page"},{"location":"vocab/irregularverbs/didomi/#Pluperfect-tense","page":"δίδωμι","title":"Pluperfect tense","text":"","category":"section"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Active voice:","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"pluperfect\"), gmpVoice(\"active\"), διδωμι, kds))","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"Middle and passive voices (identical forms):","category":"page"},{"location":"vocab/irregularverbs/didomi/","page":"δίδωμι","title":"δίδωμι","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname |> dirname |> dirname\nsrc1 = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nsrc2 = joinpath(repo, \"datasets\", \"lsj\") \nkds = Kanones.FilesDataset([src1, src2])\nδιδωμι = LexemeUrn(\"lsj.n26447\")\n\n\nMarkdown.parse(md_conjugation(gmpTense(\"pluperfect\"), gmpVoice(\"passive\"), διδωμι, kds))","category":"page"},{"location":"lexicon/#Lexicon","page":"Vocabulary items (lexemes)","title":"Lexicon","text":"","category":"section"},{"location":"lexicon/","page":"Vocabulary items (lexemes)","title":"Vocabulary items (lexemes)","text":"Special relationship between database of lexemes and LSJ lexicon:","category":"page"},{"location":"lexicon/","page":"Vocabulary items (lexemes)","title":"Vocabulary items (lexemes)","text":"ids coordinated\nKanones manages two collections: manually confirmed entries, and automatically inferred entries.  See LSJMining.jl.","category":"page"},{"location":"lexicon/","page":"Vocabulary items (lexemes)","title":"Vocabulary items (lexemes)","text":"Free to add other items in their own collection.","category":"page"},{"location":"utilities/#Utilities","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"repo = pwd() |> dirname |> dirname","category":"page"},{"location":"utilities/#Set-up","page":"Utilities","title":"Set up","text":"","category":"section"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"Start by loading a Kanones dataset.  We'll use the literarygreek-rules data in the datasets subdirectory of the Kanones github repository.","category":"page"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"using Kanones\nsourcedata = joinpath(repo, \"datasets\", \"literarygreek-rules\")\nkdata = dataset([sourcedata])\nkdata isa Kanones.FilesDataset","category":"page"},{"location":"utilities/#Decline-a-noun","page":"Utilities","title":"Decline a noun","text":"","category":"section"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"Decline a noun that you have identified with its LexemeUrn.","category":"page"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"using CitableParserBuilder\nανθρωπος = LexemeUrn(\"lsj.n8909\")\ndecline(ανθρωπος, kdata)","category":"page"},{"location":"utilities/#Proofread-a-complete-verb-conjugation-in-markdown","page":"Utilities","title":"Proofread a complete verb conjugation in markdown","text":"","category":"section"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"Compose a complete conjugation of the verb lex with rules in the Kanones dataset kds,  formatted in markdown:  md_proofconjugation(lex,kds)\nIdentical markdown conjugation of lex, but write it to file f in one step: mdfile_proofconjugation(lex,kds,f)","category":"page"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"Here is the output of md_proofconjugation using LexemeUrn(\"lsj.n56496\") (κελεύω) as the lexeme, with the Kanones dataset in literarygreek-rules","category":"page"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"Content below here beginning with the heading Complete conjugation of κελεύω generated automatically from srcdir = joinpath(repo, \"datasets\", \"literarygreek-rules\")kds = Kanones.FilesDataset([srcdir])κελευω = LexemeUrn(\"lsj.n56496\")md_proofconjugation(κελευω,kds)","category":"page"},{"location":"utilities/","page":"Utilities","title":"Utilities","text":"using Kanones, CitableParserBuilder, Markdown\nrepo = pwd() |> dirname |> dirname\nsrcdir = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nkds = Kanones.FilesDataset([srcdir])\nκελευω = LexemeUrn(\"lsj.n56496\")\n\n\nMarkdown.parse(md_proofconjugation(κελευω,kds))\n","category":"page"},{"location":"vocab/irregularadjs/#Irregular-adjectives","page":"Irregular adjectives","title":"Irregular adjectives","text":"","category":"section"},{"location":"vocab/regulars/#Overview-of-regularly-inflected-vocabulary","page":"Overview of regularly inflected vocabulary","title":"Overview of regularly inflected vocabulary","text":"","category":"section"},{"location":"vocab/regulars/#Verbs","page":"Overview of regularly inflected vocabulary","title":"Verbs","text":"","category":"section"},{"location":"vocab/regulars/","page":"Overview of regularly inflected vocabulary","title":"Overview of regularly inflected vocabulary","text":"breakdown of numbers of automatically extracted verbal stems by inflectional type","category":"page"},{"location":"vocab/regulars/#Nouns","page":"Overview of regularly inflected vocabulary","title":"Nouns","text":"","category":"section"},{"location":"vocab/regulars/","page":"Overview of regularly inflected vocabulary","title":"Overview of regularly inflected vocabulary","text":"breakdown of numbers of automatically extracted verbal stems by inflectional type","category":"page"},{"location":"vocab/regulars/#Adjectives","page":"Overview of regularly inflected vocabulary","title":"Adjectives","text":"","category":"section"},{"location":"vocab/regulars/","page":"Overview of regularly inflected vocabulary","title":"Overview of regularly inflected vocabulary","text":"breakdown of numbers of automatically extracted verbal stems by inflectional type","category":"page"},{"location":"vocab/irregularverbs/hiemi/#ἵημι","page":"ἵημι","title":"ἵημι","text":"","category":"section"},{"location":"vocab/irregularverbs/histemi/#ἵστημι","page":"ἵστημι","title":"ἵστημι","text":"","category":"section"},{"location":"forms/#Morphological-forms","page":"Morphological forms","title":"Morphological forms","text":"","category":"section"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"Form types are subtypes of GreekMorphologicalForm, and are defined by a group of morphological properties.","category":"page"},{"location":"forms/#Substantives","page":"Morphological forms","title":"Substantives","text":"","category":"section"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"There are three types of substantive form.  They are instantiated from three rule types and three stem types.","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFNoun: has GMPGender, GMPCase, GMPNumber.  Note that gender is inherent (see user's guide on stem records)","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFPronoun: has GMPGender, GMPCase, GMPNumber but in contrast to GMFNoun, gender can vary.","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFAdjective: has GMPGender, GMPCase, GMPNumber and GMPDegree.","category":"page"},{"location":"forms/#Adverbs","page":"Morphological forms","title":"Adverbs","text":"","category":"section"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFAdverb has GMPDegree.  Distinct rule type combined with stems for adjective.","category":"page"},{"location":"forms/#Verbal-forms","page":"Morphological forms","title":"Verbal forms","text":"","category":"section"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"Verb stems combine with distinct rule types for:","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFFiniteVerb: GMPPerson, GMPNumber, GMPTense, GMPMood, GMPVoice","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFInfinitive:  GMPTense, GMPVoice","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFParticiple:  GMPTense, GMPVoice, GMPGender, GMPCase, GMPNumber","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFVerbalAdjecive: GMPGender, GMPCase, GMPNumber; no degree; unlike nouns and pronouns, derived from a verbal stem.","category":"page"},{"location":"forms/#Uninflected-forms","page":"Morphological forms","title":"Uninflected forms","text":"","category":"section"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"GMFUninflected have GMPUninflectedType.  Distinct rule type and stem type.","category":"page"},{"location":"forms/","page":"Morphological forms","title":"Morphological forms","text":"note: CEX collection of all possible forms\nThe kanones github repository includes a delimited-text list of all  forms recognized by Kanones.","category":"page"},{"location":"vocab/irregularverbs/tithemi/#τίθημι","page":"τίθημι","title":"τίθημι","text":"","category":"section"},{"location":"vocab/irregularverbs/#Overview-of-irregular-verbs","page":"Overview of irregular verbs","title":"Overview of irregular verbs","text":"","category":"section"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"repo = repo = pwd() |> dirname |> dirname |> dirname","category":"page"},{"location":"bg/analysis/#Kanones'-analyses","page":"Kanones' analyses","title":"Kanones' analyses","text":"","category":"section"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"Kanones implements the model of the CitableParserBuilder module.  Parsing functions (like parsetoken) return a Vector of Analysis objects.  In addition to a lexeme and a form, each Analysis also includes a stem and an inflectional rule. Conceptually, the stem and rule provide the rationale for an analysis: the stem explains why a specific lexeme was chosen, and the inflectional rule explains how the token was formed by applying a particular inflectional pattern to the stem.  When generating tokens, pairing a stem and a rule provides enough information to identify a lexeme and a form and to compose a token.  Kanones can actually produce a full Analysis object when generating tokens!","category":"page"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"This model makes it possible to use the same set of lexemes and the same set of morphological forms with different sets of stems and rules.  The Kanones github repository, for example, includes stems and rules in two completely different orthographies: the standard orthography of printed literary Greek, and the orthography of inscriptions of Athens prior to 403 BCE.  Whichever dataset you use, the lexemes and forms are identified with the same URNs, so you can meaningfully mix analyses of tokens in different orthographies. You can even use Kanones' capacity for generating forms to analyze a token in one orthography, and generate the corresponding token for the same lexeme and form in another token.","category":"page"},{"location":"bg/analysis/#Example:-transcoding-content","page":"Kanones' analyses","title":"Example: transcoding content","text":"","category":"section"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"using Kanones, CitableParserBuilder\nusing PolytonicGreek, AtticGreek\nlgfiles = joinpath(repo, \"datasets\", \"literarygreek-rules\")\nlg = dataset(lgfiles)\nlgparser = stringParser(lg)","category":"page"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"atticfiles = joinpath(repo,\"datasets\",\"attic\")\nattic = dataset(atticfiles)\natticparser = stringParser(attic)","category":"page"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"analysis = parsetoken(\"βουλῆς\",lgparser)[1]","category":"page"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"vocab = lexeme(analysis)\nform = formurn(analysis)\ngenerate(vocab,form,attic)","category":"page"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"```","category":"page"},{"location":"bg/analysis/#Kanones'-collections","page":"Kanones' analyses","title":"Kanones' collections","text":"","category":"section"},{"location":"bg/analysis/","page":"Kanones' analyses","title":"Kanones' analyses","text":"four components:\nlexeme\nform\nstem\nrule\nall elements other than string tokens identified by URN","category":"page"},{"location":"vocab/irregularverbs/eimi-togo/#εἶμι","page":"εἶμι","title":"εἶμι","text":"","category":"section"},{"location":"vocab/irregularverbs/oida/#οἶδα","page":"οἶδα","title":"οἶδα","text":"","category":"section"},{"location":"bg/#Background:-analysis-by-synthesis","page":"Analysis by synthesis","title":"Background: analysis by synthesis","text":"","category":"section"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"One possible functional definition of morphological analysis, or parsing, is:","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"note: Morphological analysis (parsing)\nGiven a token (a string value), generate pairings of a vocabulary item (lexeme) and a morphological form.","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"Morphological synthesis is the inverse operation:  given a lexeme and a form, generate a surface token.","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"It is usually assumed that these two operations are directly reversible: analysis is thought of as \"undoing\" the process of synthesis.  This is literally true when, as is frequently the case, natural language parsers are implemented with finite state transducers.","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"In polytonic Greek, however, the surface token includes movable accents.  The correct orthography of the token results from a complex ineraction of the morphological system, phonological systems, and the accent system.  While this process can be implemented computationally to generate surface tokens, it is not stateless, and consequently cannot be simply reversed to analyze a token.  Kanones therefore takes a different approach to morphological analysis: analysis by synthesis.","category":"page"},{"location":"bg/#Kanones'-solution","page":"Analysis by synthesis","title":"Kanones' solution","text":"","category":"section"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"Kanones' solution could be summarized as:","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"Combine stems and endings to generate all forms that can possibly be recognized from this dataset.\n\"Parsing\" becomes a lookup operation.\nA \"parser\" becomes the set of all possible tokens associated with all possible analyses for that token.","category":"page"},{"location":"bg/","page":"Analysis by synthesis","title":"Analysis by synthesis","text":"In 2022, it is feasible to load the complete set of morphological analyses for all possible tokens in a natural language in memory.  This approach has the simultaneous advantages of minimal technical requirements combined with very high performance, and is easily implemented plain-text data sources that a classicist can modify or add to.","category":"page"},{"location":"urns/#Identification-with-URNs","page":"Identification with URNs","title":"Identification with URNs","text":"","category":"section"},{"location":"urns/","page":"Identification with URNs","title":"Identification with URNs","text":"URNs used in four elements of analysis are Cite2Urns\nKanones works with abbreviated form\nexpansion of abbreviated form to full URNs is managed throug a URN registry","category":"page"},{"location":"urns/#Managing-a-registry","page":"Identification with URNs","title":"Managing a registry","text":"","category":"section"},{"location":"urns/","page":"Identification with URNs","title":"Identification with URNs","text":"urnregistry folder of your dataset may have up to three subdirectories with names lexemes, rules and stems. (URN namespaces for morphological forms are fixed and not configurable.)","category":"page"},{"location":"urns/","page":"Identification with URNs","title":"Identification with URNs","text":"note: Validating your dataset's configuration\nSee this milestone in GH repo to track progress on Kanones' support for validating the structure and referential integrity of your dataset.","category":"page"},{"location":"vocab/#Vocabulary-in-the-lsj-dataset","page":"Vocabulary in the lsj dataset","title":"Vocabulary in the lsj dataset","text":"","category":"section"},{"location":"vocab/irregularverbs/eimi-tobe/#εἰμί","page":"εἰμί","title":"εἰμί","text":"","category":"section"},{"location":"morph/#Working-with-morphological-data","page":"Working with morphological data","title":"Working with morphological data","text":"","category":"section"},{"location":"stems/#Stems","page":"Lexical stems","title":"Stems","text":"","category":"section"},{"location":"stems/","page":"Lexical stems","title":"Lexical stems","text":"Stems associate a string and an inflectional class with a lexeme, identified by URN value\nSome types of stem require further information that pertains to the stem (e.g., inherent gender or persistent accent pattern)","category":"page"},{"location":"stems/#Example","page":"Lexical stems","title":"Example","text":"","category":"section"},{"location":"apis/apis/#API-documentation","page":"Julia API documentation","title":"API documentation","text":"","category":"section"},{"location":"apis/apis/","page":"Julia API documentation","title":"Julia API documentation","text":"code\nformurn","category":"page"},{"location":"apis/apis/#Kanones.code","page":"Julia API documentation","title":"Kanones.code","text":"Compose a digital code for adj.\n\ncode(verb)\n\n\n\n\n\n\nCompose a digital code string for the form identified in rule.\n\ncode(rule)\n\n\n\n\n\n\nCompose a digital code string for the form identified in verb.\n\ncode(verb)\n\n\n\n\n\n\nCompose a digital code for inf.\n\ncode(inf)\n\n\n\n\n\n\nCompose digital code for morphological form identified in rule.\n\ncode(rule)\n\n\n\n\n\n\nCompose a digital code string for the form identified in inf.\n\ncode(inf)\n\n\n\n\n\n\nCompose digital code for ptcpl.\n\ncode(ptcpl)\n\n\n\n\n\n\nCompose string of digits for form in rule.\n\ncode(rule)\n\n\n\n\n\n\nCompose a digital code for vadj.\n\ncode(vadj)\n\n\n\n\n\n\nCompose a digital code for noun.\n\ncode(noun)\n\n\n\n\n\n\nCompose a digital code string for the form identified in rule.\n\ncode(rule)\n\n\n\n\n\n\nCompose a digital code string for the form identified in noun.\n\ncode(noun)\n\n\n\n\n\n\nCompose a digital code for adj.\n\ncode(adj)\n\n\n\n\n\n\nCompose digital code for morphological form identified in rule.\n\ncode(rule)\n\n\n\n\n\n\nCompose a digital code string for the form identified in adj.\n\ncode(adj)\n\n\n\n\n\n\nCompose a digital code for adv.\n\ncode(adv)\n\n\n\n\n\n\nCompose a digital code for pronoun.\n\ncode(pronoun)\n\n\n\n\n\n\nCompose a digital code string for the form identified in pns.\n\ncode(pns)\n\n\n\n\n\n\nCompose digital code for uform.\n\ncode(uform)\n\n\n\n\n\n\nCompose a digital code string for the form identified in uninfl.\n\ncode(uninfl)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/apis/#CitableParserBuilder.formurn","page":"Julia API documentation","title":"CitableParserBuilder.formurn","text":"Identify morphlogical form in a.\n\nformurn(a)\n\n\n\n\n\n\nCompose a FormUrn for a GMFFiniteVerb.\n\nformurn(verbform)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a FiniteVerbRule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a IrregularAdjectiveStem.\n\nformurn(verb)\n\n\n\n\n\n\nCompose a FormUrn for an GMFInfinitive.\n\nformurn(infinitive)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from an InfinitiveRule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a IrregularAdjectiveStem.\n\nformurn(inf)\n\n\n\n\n\n\nCompose a FormUrn for an GMFParticiple.\n\nformurn(ptcpl)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from an InfinitiveRule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose a FormUrn for an GMFVerbalAdjective.\n\nformurn(vadj)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a VerbalAdjectiveRule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose a FormUrn for a GMFNoun.\n\nformurn(noun)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a NounRule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a IrregularNounStem.\n\nformurn(noun)\n\n\n\n\n\n\nCompose a FormUrn for an GMFAdjective.\n\nformurn(adj)\n\n\n\n\n\n\nCompose an abbreviated URN for a morphological form identified in rule.\n\nformurn(rule)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a IrregularAdjectiveStem.\n\nformurn(adj)\n\n\n\n\n\n\nCompose a FormUrn for an GMFAdjective.\n\nformurn(adv)\n\n\n\n\n\n\nCompose a FormUrn for a GMFPronoun.\n\nformurn(pronoun)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a PronounStem.\n\nformurn(pns)\n\n\n\n\n\n\nCompose a FormUrn for an GMFUninflected.\n\nformurn(uninflected)\n\n\n\n\n\n\nCompose an abbreviated URN for a rule from a UninflectedStem.\n\nformurn(uninfl)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/apis/#Parsing","page":"Julia API documentation","title":"Parsing","text":"","category":"section"},{"location":"apis/apis/","page":"Julia API documentation","title":"Julia API documentation","text":"generate\ndecline","category":"page"},{"location":"apis/apis/#Kanones.generate","page":"Julia API documentation","title":"Kanones.generate","text":"Generate a form for a given stem and rule.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate the correct string for lex in the form form.\n\ngenerate(lex, form, ruleset, stemset, orthography)\n\n\n\n\n\n\nGenerate a form for a given lexeme and form within a given dataset.\n\ngenerate(lex, form, kds)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given adjective stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given adjective stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given adjective stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\nGenerate a form for a given noun stem and rule by combining stem and ending, then adding appropriate accent for this lexical item in this form, and finally stripping off metadata characters marking vowel quantity and morpheme boundaries.\n\ngenerate(stem, rule; ortho)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/apis/#Kanones.decline","page":"Julia API documentation","title":"Kanones.decline","text":"Decline all case-number combinations of lex, a noun.\n\ndecline(lex, kd; withvocative)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#APIs:-morphological-properties-and-forms","page":"Morphological properties and forms","title":"APIs: morphological properties and forms","text":"","category":"section"},{"location":"apis/morph/#Properties","page":"Morphological properties and forms","title":"Properties","text":"","category":"section"},{"location":"apis/morph/","page":"Morphological properties and forms","title":"Morphological properties and forms","text":"Retrieve morphological properties:","category":"page"},{"location":"apis/morph/","page":"Morphological properties and forms","title":"Morphological properties and forms","text":"gmpGender\ngmpCase\ngmpNumber\ngmpPerson\ngmpTense\ngmpMood\ngmpVoice\ngmpDegree\ngmpUninflectedType","category":"page"},{"location":"apis/morph/#Kanones.gmpGender","page":"Morphological properties and forms","title":"Kanones.gmpGender","text":"Extract gender property from a KanonesRule.\n\ngmpGender(stem)\n\n\n\n\n\n\nFind gender of a form.\n\ngmpGender(gmf)\n\n\n\n\n\n\nExtract gender property from p.\n\ngmpGender(p)\n\n\n\n\n\n\nIdentify gender property of rule.\n\ngmpGender(rule)\n\n\n\n\n\n\nExtract gender property from vadj.\n\ngmpGender(vadj)\n\n\n\n\n\n\nExtract gender from n.\n\ngmpGender(n)\n\n\n\n\n\n\nIdentify gender property for nr.\n\ngmpGender(nr)\n\n\n\n\n\n\nIdentify gender of ns.\n\ngmpGender(ns)\n\n\n\n\n\n\nIdentify gender of noun.\n\ngmpGender(noun)\n\n\n\n\n\n\nExtract gender from adj.\n\ngmpGender(adj)\n\n\n\n\n\n\nIdentify gender for adj.\n\ngmpGender(adj)\n\n\n\n\n\n\nIdentify gender of adj.\n\ngmpGender(adj)\n\n\n\n\n\n\nExtract gender property from p.\n\ngmpGender(p)\n\n\n\n\n\n\nIdentify gender of pr.\n\ngmpGender(pr)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpCase","page":"Morphological properties and forms","title":"Kanones.gmpCase","text":"Extract case property from a KanonesRule.\n\ngmpCase(rule)\n\n\n\n\n\n\nFind case of a form.\n\ngmpCase(gmf)\n\n\n\n\n\n\nExtract case property from p.\n\ngmpCase(p)\n\n\n\n\n\n\nIdentify case property of rule.\n\ngmpCase(rule)\n\n\n\n\n\n\nExtract case property from vadj.\n\ngmpCase(vadj)\n\n\n\n\n\n\nExtract case from n.\n\ngmpCase(n)\n\n\n\n\n\n\nIdentify case property for nr.\n\ngmpCase(nr)\n\n\n\n\n\n\nIdentify case of noun.\n\ngmpCase(noun)\n\n\n\n\n\n\nExtract case from adj.\n\ngmpCase(adj)\n\n\n\n\n\n\nIdentify case for adj.\n\ngmpCase(adj)\n\n\n\n\n\n\nIdentify case of adj.\n\ngmpCase(adj)\n\n\n\n\n\n\nExtract case property from p.\n\ngmpCase(p)\n\n\n\n\n\n\nIdentify case of pr.\n\ngmpCase(pr)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpNumber","page":"Morphological properties and forms","title":"Kanones.gmpNumber","text":"Extract number property from a KanonesRule.\n\ngmpNumber(rule)\n\n\n\n\n\n\nFind number of a form.\n\ngmpNumber(gmf)\n\n\n\n\n\n\nExtract number property from v.\n\ngmpNumber(v)\n\n\n\n\n\n\nFind number property for rule.\n\ngmpNumber(rule)\n\n\n\n\n\n\nIdentify tense of verb.\n\ngmpNumber(verb)\n\n\n\n\n\n\nExtract tense property from p.\n\ngmpNumber(p)\n\n\n\n\n\n\nIdentify number property of rule.\n\ngmpNumber(rule)\n\n\n\n\n\n\nExtract number property from vadj.\n\ngmpNumber(vadj)\n\n\n\n\n\n\nExtract number from n.\n\ngmpNumber(n)\n\n\n\n\n\n\nIdentify number property for nr.\n\ngmpNumber(nr)\n\n\n\n\n\n\nIdentify number of noun.\n\ngmpNumber(noun)\n\n\n\n\n\n\nExtract number from adj.\n\ngmpNumber(adj)\n\n\n\n\n\n\nIdentify number for adj.\n\ngmpNumber(adj)\n\n\n\n\n\n\nIdentify number of adj.\n\ngmpNumber(adj)\n\n\n\n\n\n\nExtract number property from p.\n\ngmpNumber(p)\n\n\n\n\n\n\nIdentify number of pr.\n\ngmpNumber(pr)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpPerson","page":"Morphological properties and forms","title":"Kanones.gmpPerson","text":"Extract person property from a KanonesRule.\n\ngmpPerson(rule)\n\n\n\n\n\n\nFind person of a form.\n\ngmpPerson(gmf)\n\n\n\n\n\n\nExtract person property from v.\n\ngmpPerson(v)\n\n\n\n\n\n\nFind person property for rule.\n\ngmpPerson(rule)\n\n\n\n\n\n\nIdentify person of verb.\n\ngmpPerson(verb)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpTense","page":"Morphological properties and forms","title":"Kanones.gmpTense","text":"Extract tense property from a KanonesRule.\n\ngmpTense(rule)\n\n\n\n\n\n\nFind tense of a form.\n\ngmpTense(gmf)\n\n\n\n\n\n\nExtract tense property from v.\n\ngmpTense(v)\n\n\n\n\n\n\nFind tense property for rule.\n\ngmpTense(rule)\n\n\n\n\n\n\nIdentify tense of verb.\n\ngmpTense(verb)\n\n\n\n\n\n\nExtract tense value from inf.\n\ngmpTense(inf)\n\n\n\n\n\n\nFind tense property of inf.\n\ngmpTense(inf)\n\n\n\n\n\n\nIdentify tense of inf.\n\ngmpTense(inf)\n\n\n\n\n\n\nExtract tense property from p.\n\ngmpTense(p)\n\n\n\n\n\n\nIdentify tense property of rule.\n\ngmpTense(rule)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpMood","page":"Morphological properties and forms","title":"Kanones.gmpMood","text":"Extract mood property from a KanonesRule.\n\ngmpMood(rule)\n\n\n\n\n\n\nFind mood of a form.\n\ngmpMood(gmf)\n\n\n\n\n\n\nExtract mood property from v.\n\ngmpMood(v)\n\n\n\n\n\n\nFind mood property for rule.\n\ngmpMood(rule)\n\n\n\n\n\n\nIdentify mood of verb.\n\ngmpMood(verb)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpVoice","page":"Morphological properties and forms","title":"Kanones.gmpVoice","text":"Extract voice property from a KanonesRule.\n\ngmpVoice(rule)\n\n\n\n\n\n\nFind voice of a form.\n\ngmpVoice(gmf)\n\n\n\n\n\n\nExtract voice property from v.\n\ngmpVoice(v)\n\n\n\n\n\n\nFind voice property for rule.\n\ngmpVoice(rule)\n\n\n\n\n\n\nIdentify voice of verb.\n\ngmpVoice(verb)\n\n\n\n\n\n\nExtract voice value from inf.\n\ngmpVoice(inf)\n\n\n\n\n\n\nFind voice property of inf.\n\ngmpVoice(inf)\n\n\n\n\n\n\nIdentify voice of inf.\n\ngmpVoice(inf)\n\n\n\n\n\n\nExtract voice property from p.\n\ngmpVoice(p)\n\n\n\n\n\n\nIdentify voice property of rule.\n\ngmpVoice(rule)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpDegree","page":"Morphological properties and forms","title":"Kanones.gmpDegree","text":"Extract degree property from a KanonesRule.\n\ngmpDegree(rule)\n\n\n\n\n\n\nFind degree of a form.\n\ngmpDegree(gmf)\n\n\n\n\n\n\nExtract degree from adj.\n\ngmpDegree(adj)\n\n\n\n\n\n\nIdentify degree for adj.\n\ngmpDegree(adj)\n\n\n\n\n\n\nIdentify degree of adj.\n\ngmpDegree(adj)\n\n\n\n\n\n\nRetrieve degree property of adv.\n\ngmpDegree(adv)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmpUninflectedType","page":"Morphological properties and forms","title":"Kanones.gmpUninflectedType","text":"Find part of speech of an uninflected form.\n\ngmpUninflectedType(gmf)\n\n\n\n\n\n\nExtract \"part of speech\" type from uform.\n\ngmpUninflectedType(uform)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Forms","page":"Morphological properties and forms","title":"Forms","text":"","category":"section"},{"location":"apis/morph/","page":"Morphological properties and forms","title":"Morphological properties and forms","text":"Construct morphological forms:","category":"page"},{"location":"apis/morph/","page":"Morphological properties and forms","title":"Morphological properties and forms","text":"gmfAdjective\ngmfAdverb\ngmfFiniteVerb\ngmfInfinitive\ngmfNoun\ngmfParticiple\ngmfPronoun\ngmfUninflected\ngmfVerbalAdjective","category":"page"},{"location":"apis/morph/#Kanones.gmfAdjective","page":"Morphological properties and forms","title":"Kanones.gmfAdjective","text":"Create an GMFAdjective from a string value.\n\ngmfAdjective(code)\n\n\n\n\n\n\nCreate an GMFAdjective from a CITE2 URN.\n\ngmfAdjective(urn)\n\n\n\n\n\n\nCreate a GMFAdjective from a FormUrn.\n\ngmfAdjective(f)\n\n\n\n\n\n\nCreate a GMFAdjective from an Analysis.\n\ngmfAdjective(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfAdverb","page":"Morphological properties and forms","title":"Kanones.gmfAdverb","text":"Construct a GMFAdverb from a digital code.\n\ngmfAdverb(code)\n\n\n\n\n\n\nConstruct a GMFAdverb from a FormUrn.\n\ngmfAdverb(abbrurn)\n\n\n\n\n\n\nConstruct a GMFAdverb from a Cite2Urn.\n\ngmfAdverb(urn)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfFiniteVerb","page":"Morphological properties and forms","title":"Kanones.gmfFiniteVerb","text":"Create a GMFFiniteVerb from a string value.\n\ngmfFiniteVerb(code)\n\n\n\n\n\n\nCreate a GMFFiniteVerb from a Cite2URN.\n\ngmfFiniteVerb(urn)\n\n\n\n\n\n\nCreate a GMFFiniteVerb from a FormUrn.\n\ngmfFiniteVerb(f)\n\n\n\n\n\n\nCreate a GMFFiniteVerb from an Analysis.\n\ngmfFiniteVerb(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfInfinitive","page":"Morphological properties and forms","title":"Kanones.gmfInfinitive","text":"Create an GMFInfinitive from a string value.\n\ngmfInfinitive(code)\n\n\n\n\n\n\nCreate an GMFInfinitive from a Cite2Urn.\n\ngmfInfinitive(urn)\n\n\n\n\n\n\nCreate an GMFInfinitive from a FormUrn.\n\ngmfInfinitive(f)\n\n\n\n\n\n\nCreate an GMFInfinitive from an Analysis.\n\ngmfInfinitive(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfNoun","page":"Morphological properties and forms","title":"Kanones.gmfNoun","text":"Create a GMFNoun from a string value.\n\ngmfNoun(code)\n\n\n\n\n\n\nCreate a GMFNoun from a Cite2Urn.\n\ngmfNoun(urn)\n\n\n\n\n\n\nCreate a GMFNoun from a FormUrn.\n\ngmfNoun(f)\n\n\n\n\n\n\nCreate a GMFNoun from an Analysis.\n\ngmfNoun(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfParticiple","page":"Morphological properties and forms","title":"Kanones.gmfParticiple","text":"Create a GMFParticiple from a string value.\n\ngmfParticiple(code)\n\n\n\n\n\n\nCreate a GMFParticiple from a Cite2Urn.\n\ngmfParticiple(urn)\n\n\n\n\n\n\nCreate a GMFParticiple from a FormUrn.\n\ngmfParticiple(f)\n\n\n\n\n\n\nCreate a GMFParticiple from an Analysis.\n\ngmfParticiple(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfPronoun","page":"Morphological properties and forms","title":"Kanones.gmfPronoun","text":"Create a GMFPronoun from a string value.\n\ngmfPronoun(code)\n\n\n\n\n\n\nCreate a GMFPronoun from a Cite2Urn.\n\ngmfPronoun(urn)\n\n\n\n\n\n\nCreate a GMFPronoun from a FormUrn.\n\ngmfPronoun(f)\n\n\n\n\n\n\nCreate a GMFPronoun from an Analysis.\n\ngmfPronoun(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfUninflected","page":"Morphological properties and forms","title":"Kanones.gmfUninflected","text":"Create GMFUninflected from a Cite2Urn.\n\ngmfUninflected(urn)\n\n\n\n\n\n\nCreate GMFUninflected from a FormUrn.\n\ngmfUninflected(u)\n\n\n\n\n\n\nCreate GMFUninflected from a string value.\n\ngmfUninflected(codeString)\n\n\n\n\n\n\nCreate GMFUninflected from a Char.\n\ngmfUninflected(ch)\n\n\n\n\n\n\nCreate GMFUninflected from an Int.\n\ngmfUninflected(code)\n\n\n\n\n\n\nCreate GMFUninflected from an Analysis.\n\ngmfUninflected(a)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/morph/#Kanones.gmfVerbalAdjective","page":"Morphological properties and forms","title":"Kanones.gmfVerbalAdjective","text":"Create a GMFVerbalAdjective from a string value.\n\ngmfVerbalAdjective(code)\n\n\n\n\n\n\nCreate a GMFVerbalAdjective from a Cite2Urn.\n\ngmfVerbalAdjective(urn)\n\n\n\n\n\n\nCreate a GMFVerbalAdjective from a FormUrn.\n\ngmfVerbalAdjective(f)\n\n\n\n\n\n\nCreate a GMFVerbalAdjective from an Analysis.\n\ngmfVerbalAdjective(a)\n\n\n\n\n\n\n","category":"function"},{"location":"properties/#Morphological-properties","page":"Morphological properties","title":"Morphological properties","text":"","category":"section"},{"location":"properties/#Overview","page":"Morphological properties","title":"Overview","text":"","category":"section"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Of the four data sets Kanones uses (vocabulary, forms, stems and rules), only one is not editable: forms.  The set of possible forms defines a morphology as \"Greek\".","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Morphological forms (next page) are defined by unique sets of the morphological properties (that is, subtypes of GreekMorphologicalProperty) listed here.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"using Kanones\nperson = GMPPerson(3)","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"All properties work with the label and code functions.`","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"label(person)","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"code(person)","category":"page"},{"location":"properties/#Properties","page":"Morphological properties","title":"Properties","text":"","category":"section"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"The full set of properties is: person, number, tense, mood, voice, gender, case, degree and uninflected part of speech.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Properties may be constructed directly from numeric codes, or from the string value returned by its label function by using an  constructor function with identical name to the type but with initial lowercase gmp.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Person: three values labelled first, second, third.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpPerson(3) == gmpPerson(\"third\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Number: three values labelled singular, dual, plural.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpNumber(3) == gmpNumber(\"plural\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Tense: six values labelled present, imperfect, aorist, perfect, pluperfect and future.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpTense(3) == gmpTense(\"aorist\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Mood: four values labelled indicative, subjunctive, optative, imperative.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpMood(1) == gmpMood(\"indicative\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Voice: three values labelled active, middle, passive.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpVoice(2) == gmpVoice(\"middle\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Gender: three values labelled masculine, feminine, neuter.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpGender(2) == gmpGender(\"feminine\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Case: five values labelled nominative, genitive, dative, accusative, vocative.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpCase(2) == gmpCase(\"genitive\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Degree: three values labelled positive, comparative, superlative.","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpDegree(2) == gmpDegree(\"comparative\")","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"Uninflected part of speech: six values labelled conjunction,     preposition, particle, adverb, numeral, interjection","category":"page"},{"location":"properties/","page":"Morphological properties","title":"Morphological properties","text":"gmpUninflectedType(2) == gmpUninflectedType(\"preposition\")","category":"page"},{"location":"bg/datasets/#Datasets","page":"Data sets","title":"Datasets","text":"","category":"section"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"For the four collection Kanones needs:","category":"page"},{"location":"bg/datasets/#Forms-collection","page":"Data sets","title":"Forms collection","text":"","category":"section"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"a collection of all possible morphological forms is precompiled as part of the GH repo.  These are the only forms Kanones can work with: you cannot change these.","category":"page"},{"location":"bg/datasets/#Collection-of-lexemes","page":"Data sets","title":"Collection of lexemes","text":"","category":"section"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"a large collection of Greek lexemes is included in two collections: lsjx is a collection of candidate lexemes generated from LSJ articles; lsj is a subset of those that have been verified to be a lexeme.","category":"page"},{"location":"bg/datasets/#Inflectional-rules","page":"Data sets","title":"Inflectional rules","text":"","category":"section"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"for standard literary Greek, datasets/literarygreek-rules should be all you need for Attic.  You can add to these if you want to e.g. expand coverage of literary dialects. Best practice: maintain additions in separate files, and please submit pull request to add them to Kanones' gh repo!\nfor Attic alphabet pre 403 BCE, sample rules in datasets/attic.","category":"page"},{"location":"bg/datasets/#Stems","page":"Data sets","title":"Stems","text":"","category":"section"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"In practice, this is the dataset you're most likely to edit.","category":"page"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"Identifying lexemes:","category":"page"},{"location":"bg/datasets/","page":"Data sets","title":"Data sets","text":"check LSJ from folio2.furman.edu; use its ID value if you find your item. Otherwise, register your own namespace, create a new id in that namespace\nuse separate files to group things easily.  Eg., proper names in a particular text or corpus that do not appear in LSJ","category":"page"},{"location":"","page":"Home","title":"Home","text":"repo = pwd() |> dirname |> dirname ","category":"page"},{"location":"#Kanones","page":"Home","title":"Kanones","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"☛ Build customized morphological parsers for ancient Greek","category":"page"},{"location":"","page":"Home","title":"Home","text":"all data managed in delimited-text tables you can modify or add to with any text editor\nrigorously defined orthography.  Example parsers include standard orthography of printed editions of literary Greek, and a parser for epigraphic Greek in the alphabet used by Athens before 403 BCE.\nimplemented entirely in the Julia language (no other technical prerequisites): \nplatform independent\nfast\ncode library can be used from command line, in scripts, in web apps, directly in an editor like Visual Studio Code","category":"page"},{"location":"#Quick-example","page":"Home","title":"Quick example","text":"","category":"section"},{"location":"#Building-a-parser","page":"Home","title":"Building a parser","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Load a dataset, and build a parser from it.  All the examples in this documentation use the literarygreek-rules dataset found in the datasets directory of the Kanones github repository.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Kanones, CitableParserBuilder\nsrcdir = joinpath(repo, \"datasets\", \"literarygreek-rules\") \nkds = dataset([srcdir])\np = stringParser(kds)\np isa StringParser","category":"page"},{"location":"#Interactive-parsing","page":"Home","title":"Interactive parsing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Parse a string: in this case, there is only one result.","category":"page"},{"location":"","page":"Home","title":"Home","text":"s = \"ἀνθρώπῳ\"\nparses = parsetoken(s, p)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Extract a GreekMorphologicalForm from each analysis, and apply the label function to each:","category":"page"},{"location":"","page":"Home","title":"Home","text":"parses .|> greekForm .|> label","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Background: a synthesis-first approach to parsing NL morphology\nUser's guide:  the four datasets Kanones uses\nReference: stem classes and paradigms\nReference: API documentation","category":"page"},{"location":"rules/#Inflectional-rules","page":"Inflectional rules","title":"Inflectional rules","text":"","category":"section"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"associate an ending and an inflectional class with a morphological form\nin managing rules from delimited-text files, different types of morphological forms are represented by appropriate property values\nrules can be read from delimited-text source with readrulerow","category":"page"},{"location":"rules/#Example","page":"Inflectional rules","title":"Example","text":"","category":"section"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"Read a rule from delimited text:","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"using Kanones\ndelimited = \"adjinfl.osaon1|os_a_on|ος|masculine|nominative|singular|positive|\"\nadjio = Kanones.AdjectiveIO(\"adjectives\")\nrule = Kanones.readrulerow(adjio, delimited)","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"Find its RuleUrn:","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"ruleurn(rule)","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"Find its inflectional type and inflectional ending:","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"inflectionclass(rule)","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"ending(rule)","category":"page"},{"location":"rules/#morphological-data","page":"Inflectional rules","title":"morphological data","text":"","category":"section"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"formabbr = formurn(rule) expectedabbr = FormUrn(\"forms.7010001110\") @test formabbr == expectedabbr","category":"page"},{"location":"rules/","page":"Inflectional rules","title":"Inflectional rules","text":"formcode = code(rule) expectedcode = \"7010001110\" @test formcode == expectedcode","category":"page"},{"location":"vocab/irregularnouns/#Irregular-nouns","page":"Irregular nouns","title":"Irregular nouns","text":"","category":"section"}]
}
